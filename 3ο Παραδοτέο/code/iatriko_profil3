import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton, QVBoxLayout, QWidget, QHBoxLayout, QLabel, QLineEdit, QTextEdit, QMessageBox
from PyQt5.QtCore import Qt

class ContentWidget(QWidget):
    def __init__(self, content):
        super().__init__()
        self.layout = QVBoxLayout()
        self.label = QLabel(content, self)
        self.label.setAlignment(Qt.AlignCenter)
        self.layout.addWidget(self.label)
        self.setLayout(self.layout)

class MedicalProfileWidget(QWidget):
    def __init__(self):
        super().__init__()
        self.layout = QVBoxLayout()

        # Create labels and line edits for user details
        self.first_name_label = QLabel("Όνομα:", self)
        self.first_name_edit = QLineEdit("Γιάννης", self)

        self.last_name_label = QLabel("Επώνυμο:", self)
        self.last_name_edit = QLineEdit("Παπαδόπουλος", self)

        self.age_label = QLabel("Ηλικία:", self)
        self.age_edit = QLineEdit("30", self)

        self.weight_label = QLabel("Βάρος:", self)
        self.weight_edit = QLineEdit("70kg", self)

        self.height_label = QLabel("Ύψος:", self)
        self.height_edit = QLineEdit("180cm", self)

        self.pressure_label = QLabel("Πίεση:", self)
        self.pressure_edit = QLineEdit("120/80", self)

        self.blood_group_label = QLabel("Ομάδα Αίματος:", self)
        self.blood_group_edit = QLineEdit("O+", self)

        self.eye_color_label = QLabel("Χρώμα Ματιών:", self)
        self.eye_color_edit = QLineEdit("Καστανά", self)

        # Add widgets to the layout
        self.layout.addWidget(self.first_name_label)
        self.layout.addWidget(self.first_name_edit)
        self.layout.addWidget(self.last_name_label)
        self.layout.addWidget(self.last_name_edit)
        self.layout.addWidget(self.age_label)
        self.layout.addWidget(self.age_edit)
        self.layout.addWidget(self.weight_label)
        self.layout.addWidget(self.weight_edit)
        self.layout.addWidget(self.height_label)
        self.layout.addWidget(self.height_edit)
        self.layout.addWidget(self.pressure_label)
        self.layout.addWidget(self.pressure_edit)
        self.layout.addWidget(self.blood_group_label)
        self.layout.addWidget(self.blood_group_edit)
        self.layout.addWidget(self.eye_color_label)
        self.layout.addWidget(self.eye_color_edit)

        # Add edit button
        self.edit_button = QPushButton("ΕΠΕΞΕΡΓΑΣΙΑ ΔΕΔΟΜΕΝΩΝ", self)
        self.edit_button.clicked.connect(self.save_data)
        self.layout.addWidget(self.edit_button)

        self.setLayout(self.layout)

    def save_data(self):
        # Get data from line edits and do something with it (e.g., save to a file or database)
        first_name = self.first_name_edit.text()
        last_name = self.last_name_edit.text()
        age = self.age_edit.text()
        weight = self.weight_edit.text()
        height = self.height_edit.text()
        pressure = self.pressure_edit.text()
        blood_group = self.blood_group_edit.text()
        eye_color = self.eye_color_edit.text()

        # Here you can perform actions with the retrieved data, such as saving it to a file or database
        # For example:
        with open('medical_profile.txt', 'w') as file:
            file.write(f"First Name: {first_name}\n")
            file.write(f"Last Name: {last_name}\n")
            file.write(f"Age: {age}\n")
            file.write(f"Weight: {weight}\n")
            file.write(f"Height: {height}\n")
            file.write(f"Pressure: {pressure}\n")
            file.write(f"Blood Group: {blood_group}\n")
            file.write(f"Eye Color: {eye_color}\n")

        # Optionally, you can display a message to confirm that the data has been saved
        QMessageBox.information(self, "Αποθήκευση Δεδομένων", "Τα δεδομένα αποθηκεύτηκαν επιτυχώς.")

        # You can also clear the line edits after saving the data if needed
        self.clear_line_edits()

    def clear_line_edits(self):
        # Clear all line edits
        self.first_name_edit.clear()
        self.last_name_edit.clear()
        self.age_edit.clear()
        self.weight_edit.clear()
        self.height_edit.clear()
        self.pressure_edit.clear()
        self.blood_group_edit.clear()
        self.eye_color_edit.clear()

class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()

        self.setWindowTitle('ΚΑΛΩΣ ΗΡΘΕΣ "ΟΝΟΜΑ ΧΡΗΣΤΗ"')

        # Main layout
        self.main_layout = QHBoxLayout()

        # Add the menu bar to the main layout
        self.menu_widget = self.create_menu()
        self.main_layout.addWidget(self.menu_widget)

        # Main content area
        self.content_area = QWidget()
        self.content_layout = QVBoxLayout()

        # Greeting message
        self.greeting_label = QLabel('Welcome, ΟΝΟΜΑ ΧΡΗΣΤΗ!', self)
        self.greeting_label.setAlignment(Qt.AlignCenter)
        self.greeting_label.setStyleSheet("font-size: 20px; font-weight: bold;")
        self.content_layout.addWidget(self.greeting_label)

        # Two boxes at the bottom center
        self.bottom_layout = QHBoxLayout()
        self.box1 = QLineEdit(self)
        self.box2 = QTextEdit(self)
        self.box1.setMinimumSize(200, 50)  # Adjusted sizes to fit the window
        self.box2.setMinimumSize(200, 50)
        self.bottom_layout.addWidget(self.box1)
        self.bottom_layout.addWidget(self.box2)
        self.content_layout.addLayout(self.bottom_layout)

        self.content_area.setLayout(self.content_layout)
        self.main_layout.addWidget(self.content_area)

        main_widget = QWidget()
        main_widget.setLayout(self.main_layout)
        self.setCentralWidget(main_widget)

        # Set the fixed size of the window
        self.setFixedSize(1200, 600)

    def create_menu(self):
        menu_layout = QVBoxLayout()
        self.add_menu_button(menu_layout, 'ΑΡΧΙΚΗ', 'Home Page', 'This is the home page content.')
        self.add_menu_button(menu_layout, 'CHAT', 'Chat', 'Αυτή είναι η σελίδα chat.')
        self.add_menu_button(menu_layout, 'ΒΟΗΘΕΙΑ', 'Βοήθεια', 'Αυτή είναι η σελίδα βοήθειας.')
        self.add_menu_button(menu_layout, 'ΙΑΤΡΙΚΟ ΠΡΟΦΙΛ', 'Ιατρικό Προφίλ', 'Αυτή είναι η σελίδα ιατρικού προφίλ.', self.show_medical_profile)
        self.add_menu_button(menu_layout, 'ΠΟΡΤΟΦΟΛΙ ΥΓΕΙΑΣ', 'Πορτοφόλι Υγείας', 'Αυτή είναι η σελίδα πορτοφολιού υγείας.')
        self.add_menu_button(menu_layout, 'ΕΠΙΚΟΙΝΩΝΙΑ', 'Επικοινωνία', 'Αυτή είναι η σελίδα επικοινωνίας.')

        exit_button = QPushButton('ΕΞΟΔΟΣ')
        exit_button.clicked.connect(self.close_application)
        menu_layout.addWidget(exit_button)

        menu_layout.addStretch()  # Add stretch to push menu items to the top

        menu_widget = QWidget()
        menu_widget.setLayout(menu_layout)
        menu_widget.setStyleSheet("background-color: #CDEAC0;")
        menu_widget.setMinimumWidth(200)  # Fixed width for menu
        return menu_widget

    def add_menu_button(self, menu_layout, text, window_title, window_content, custom_function=None):
        button = QPushButton(text, self)
        if custom_function:
            button.clicked.connect(custom_function)
        else:
            button.clicked.connect(lambda _, t=window_title, c=window_content: self.show_content(t, c))
        menu_layout.addWidget(button)

    def show_home_page(self):
        self.clear_content_area()

        self.greeting_label = QLabel('Welcome, ΟΝΟΜΑ ΧΡΗΣΤΗ!', self)
        self.greeting_label.setAlignment(Qt.AlignCenter)
        self.greeting_label.setStyleSheet("font-size: 20px; font-weight: bold;")
        self.content_layout.addWidget(self.greeting_label)

        self.bottom_layout = QHBoxLayout()
        self.box1 = QLineEdit(self)
        self.box2 = QTextEdit(self)
        self.box1.setMinimumSize(200, 50)  # Adjusted sizes to fit the window
        self.box2.setMinimumSize(200, 50)
        self.bottom_layout.addWidget(self.box1)
        self.bottom_layout.addWidget(self.box2)
        self.content_layout.addLayout(self.bottom_layout)

        self.content_area.setLayout(self.content_layout)
        self.main_layout.addWidget(self.content_area)

    def show_content(self, title, content):
        self.clear_content_area()
        self.content_area = ContentWidget(content)
        self.main_layout.addWidget(self.content_area)

    def show_medical_profile(self):
        self.clear_content_area()
        self.content_area = MedicalProfileWidget()
        self.main_layout.addWidget(self.content_area)

    def clear_content_area(self):
        self.content_area.setParent(None)
        self.content_layout = QVBoxLayout()
        self.content_area = QWidget()
        self.content_area.setLayout(self.content_layout)

    def close_application(self):
        QApplication.instance().quit()

if __name__ == '__main__':
    app = QApplication(sys.argv)
    window = MainWindow()
    window.show()
    sys.exit(app.exec_())
