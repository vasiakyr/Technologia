import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton, QVBoxLayout, QWidget, QHBoxLayout, QLabel, QLineEdit, QTextEdit, QComboBox, QCheckBox, QRadioButton, QButtonGroup
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QIcon



class ContentWidget(QWidget):
    def __init__(self, content):
        super().__init__()
        self.layout = QVBoxLayout()
        self.label = QLabel(content, self)
        self.label.setAlignment(Qt.AlignCenter)
        self.layout.addWidget(self.label)
        self.setLayout(self.layout)

class HelpWidget(QWidget):
    def __init__(self, parent):
        super().__init__(parent)
        self.layout = QVBoxLayout()

        self.button1 = QPushButton("ΧΡΕΙΑΖΟΜΑΙ ΦΑΡΜΑΚΑ")
        self.button2 = QPushButton("ΨΑΧΝΩ ΓΙΑΤΡΟ")
        self.button3 = QPushButton("ΘΕΛΩ ΝΑ ΔΩΣΩ ΑΙΜΑ")

        self.layout.addWidget(self.button1)
        self.layout.addWidget(self.button2)
        self.layout.addWidget(self.button3)

        self.button1.clicked.connect(parent.show_medicine_options)
        self.button2.clicked.connect(lambda: parent.show_content("Ψάχνω Γιατρό", "Περιεχόμενο για Ψάχνω Γιατρό"))
        self.button3.clicked.connect(lambda: parent.show_content("Θέλω Να Δώσω Αίμα", "Περιεχόμενο για Θέλω Να Δώσω Αίμα"))

        self.setLayout(self.layout)

class MedicineWidget(QWidget):
    def __init__(self, parent):
        super().__init__(parent)
        self.layout = QVBoxLayout()  # Changed to QVBoxLayout to align items at the top

        # Συμπτώματα
        self.symptom_layout = QHBoxLayout()
        self.symptom_label = QLabel("ΣΥΜΠΤΩΜΑΤΑ:", self)
        self.symptom_input = QLineEdit(self)
        self.symptom_list = QComboBox(self)
        self.symptom_list.addItems(["Πυρετός", "Βήχας", "Πονοκέφαλος"])  # Προσθήκη λίστας συμπτωμάτων
        self.symptom_layout.addWidget(self.symptom_label)
        self.symptom_layout.addWidget(self.symptom_input)
        self.symptom_layout.addWidget(self.symptom_list)

        # Απαιτείται Συνταγή
        self.prescription_layout = QHBoxLayout()
        self.prescription_label = QLabel("ΑΠΑΙΤΕΙΤΑΙ ΣΥΝΤΑΓΗ;", self)
        self.prescription_yes = QRadioButton("ΝΑΙ", self)
        self.prescription_no = QRadioButton("ΟΧΙ", self)
        self.prescription_group = QButtonGroup(self)
        self.prescription_group.addButton(self.prescription_yes)
        self.prescription_group.addButton(self.prescription_no)
        self.prescription_layout.addWidget(self.prescription_label)
        self.prescription_layout.addWidget(self.prescription_yes)
        self.prescription_layout.addWidget(self.prescription_no)

        # Search Button
        self.search_button = QPushButton("Search", self)
        self.search_button.clicked.connect(self.perform_search)  #αν μπορεω να προσθεσω εικονιδιο αναζητησησ στο search


        self.layout.addLayout(self.symptom_layout)
        self.layout.addLayout(self.prescription_layout)
        self.layout.addWidget(self.search_button)
        self.layout.addStretch()  # Add stretch to push all elements to the top

        self.setLayout(self.layout)
    def perform_search(self):
        symptom = self.symptom_input.text()
        requires_prescription = self.prescription_yes.isChecked()
        # Εδώ μπορείτε να προσθέσετε τη λογική αναζήτησης
        result = f"Αναζήτηση για: {symptom}, Απαιτείται Συνταγή: {'ΝΑΙ' if requires_prescription else 'ΟΧΙ'}"
        self.parent().show_content("Αποτελέσματα Αναζήτησης", result)

class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()

        self.setWindowTitle('ΚΑΛΩΣ ΗΡΘΕΣ "ΟΝΟΜΑ ΧΡΗΣΤΗ"')

        # Main layout
        self.main_layout = QHBoxLayout()

        # Add the menu bar to the main layout
        self.menu_widget = self.create_menu()
        self.main_layout.addWidget(self.menu_widget)

        # Main content area
        self.content_area = QWidget()
        self.content_layout = QVBoxLayout()

        # Greeting message
        self.greeting_label = QLabel('Welcome, ΟΝΟΜΑ ΧΡΗΣΤΗ!', self)
        self.greeting_label.setAlignment(Qt.AlignCenter)
        self.greeting_label.setStyleSheet("font-size: 20px; font-weight: bold;")
        self.content_layout.addWidget(self.greeting_label)

        # Two boxes at the bottom center
        self.bottom_layout = QHBoxLayout()
        self.box1 = QLineEdit(self)
        self.box2 = QTextEdit(self)
        self.box1.setMinimumSize(1500, 800)
        self.box2.setMinimumSize(1500, 800)
        self.bottom_layout.addWidget(self.box1)
        self.bottom_layout.addWidget(self.box2)
        self.content_layout.addLayout(self.bottom_layout)

        self.content_area.setLayout(self.content_layout)
        self.main_layout.addWidget(self.content_area)

        main_widget = QWidget()
        main_widget.setLayout(self.main_layout)
        self.setCentralWidget(main_widget)

        # Set the fixed size of the window
        self.setFixedSize(1200, 600)

    def create_menu(self):
        menu_layout = QVBoxLayout()
        self.add_menu_button(menu_layout, 'ΑΡΧΙΚΗ', 'Home Page', 'This is the home page content.')
        self.add_menu_button(menu_layout, 'CHAT', 'Chat Page', 'This is the chat page content.')
        self.add_menu_button(menu_layout, 'ΒΟΗΘΕΙΑ', 'Help Page', 'This is the help page content.')
        self.add_menu_button(menu_layout, 'ΙΑΤΡΙΚΟ ΠΡΟΦΙΛ', 'Medical Profile Page', 'This is the medical profile page content.')
        self.add_menu_button(menu_layout, 'ΠΟΡΤΟΦΟΛΙ ΥΓΕΙΑΣ', 'Health Wallet Page', 'This is the health wallet page content.')
        self.add_menu_button(menu_layout, 'ΕΠΙΚΟΙΝΩΝΙΑ', 'Contact Page', 'This is the contact page content.')

        exit_button = QPushButton('ΕΞΟΔΟΣ')
        exit_button.clicked.connect(self.close_application)
        menu_layout.addWidget(exit_button)
        menu_layout.addStretch()  # Add stretch to push menu items to the top

        menu_widget = QWidget()
        menu_widget.setLayout(menu_layout)
        menu_widget.setStyleSheet("background-color: #CDEAC0;")
        menu_widget.setMinimumWidth(self.frameGeometry().width() // 5)
        return menu_widget

    def add_menu_button(self, menu_layout, text, window_title=None, window_content=None):
        button = QPushButton(text, self)
        if text == 'ΑΡΧΙΚΗ':
            button.clicked.connect(self.show_home_page)
        elif text == 'ΒΟΗΘΕΙΑ':
            button.clicked.connect(self.show_help_page)
        else:
            button.clicked.connect(lambda: self.show_content(window_title, window_content))
        menu_layout.addWidget(button)

    def show_home_page(self):
        # Clear the current content
        self.clear_content()

        # Recreate the main content area
        self.content_area = QWidget()
        self.content_layout = QVBoxLayout()

        self.greeting_label = QLabel('Welcome, ΟΝΟΜΑ ΧΡΗΣΤΗ!', self)
        self.greeting_label.setAlignment(Qt.AlignCenter)
        self.greeting_label.setStyleSheet("font-size: 20px; font-weight: bold;")
        self.content_layout.addWidget(self.greeting_label)

        self.bottom_layout = QHBoxLayout()
        self.box1 = QLineEdit(self)
        self.box2 = QTextEdit(self)
        self.box1.setMinimumSize(200, 50)
        self.box2.setMinimumSize(200, 50)
        self.bottom_layout.addWidget(self.box1)
        self.bottom_layout.addWidget(self.box2)
        self.content_layout.addLayout(self.bottom_layout)

        self.content_area.setLayout(self.content_layout)
        self.main_layout.addWidget(self.content_area)

    def show_help_page(self):
        self.clear_content()
        self.content_area = HelpWidget(self)
        self.main_layout.addWidget(self.content_area)

    def show_medicine_options(self):
        self.clear_content()
        self.content_area = MedicineWidget(self)
        self.main_layout.addWidget(self.content_area)

    def show_content(self, title, content):
        self.clear_content()
        self.content_area = ContentWidget(content)
        self.main_layout.addWidget(self.content_area)

    def clear_content(self):
        if self.content_area:
            self.main_layout.removeWidget(self.content_area)
            self.content_area.deleteLater()
            self.content_area = None

    def close_application(self):
        QApplication.instance().quit()

if __name__ == '__main__':
    app = QApplication(sys.argv)
    window = MainWindow()
    window.show()
    sys.exit(app.exec_())
