        @@@@  UPDATE  @@@@
# # Αντί να έχουμε και home_appointment και doctor_appointment, θα έχουμε μια κοινή κλάση για κάθε είδος ραντεβού

# # Να προσθέσουμε φόρμα για την προσθήκη ασθενή σε ατζέντα γιατρού(use case 6)

# # Να προσθέσουμε φόρμα για τη φορμα πορτοφολι υγεια(use case 8)

# # Να προσθεσουμε οντοτητε ΑΤΖΕΝΤΑ(use case 7) κ ΟΘΟΝΗ ΙΑΤΡΙΚΟΥ ΠΡΟΦΙΛ(use case 7, use case 6 )

                ~ ~ ~ ~        Attributes and Methods        ~ ~ ~ ~
6. Medicine: (use case 1 - αναζητηση φαρμακου)(use case 4 - διαθεσιμοτητα κ κρατησεις φαρμακων)
	string company, string expire, float mls, int num_of_pills, int diathesimotita	
	get_list_of_med():  μέθοδος που εμφανίζει τη λίστα με όλα τα φάρμακα
 get_med_info(): μέθοδος που εμφανίζει τα αναλυτικά στοιχεία ενός φαρμάκου
 filterted_med_search(): μέθοδος που καλείται όταν γίνεται φιλτράρισμα της αναζήτησης φαρμάκου. Κάνει ο,τι και η get_list_of_med αλλά η αναζήτηση περιορίζεται με βάση τα φίλτρα.
reserve_med(): μέθοδος που καλείται όταν θέλουμε να πραγματοποιήσουμε κράτηση φαρμάκου.
time_for_reservetion(): μέθοδος που καλείται όταν γίνεται κράτηση φαρμάκου, δίνει περιθώριο 48 ώρες στον πολίτη μέχρι να ολοκληρώσει την κράτηση με την αγορά του φαρμάκου.

	
7. Doctor_Speciality: (use case 2 - αναζήτηση γιατρού)
	string eidikotita, int hronia_empirias, string key_words=[]
	get_info(): Μέθοδος που παρέχει τα αναλυτικά στοιχεία του γιατρού.
match_key_words(): Μέθοδος που καλείται όταν ο πολίτης δεν ξέρει τι είδος γιατρού χρειάζεται και κάνει αναζήτηση με λέξεις κλειδιά όπως πχ αρθρώσεις.

8. Blood_Donation_Unit: (use case 3 - αιμοδοσια)
	string location, string programma=[], int chairs, string hospital, string doctors_names=[]
	get_info(): Μέθοδος που εμφανίζει τα αναλυτικά στοιχεία της μονάδας αιμοδοσίας που επιλέχθηκε.
 randevouz(): Μέθοδος που καλείται όταν κάποιος πολίτης κλείνει ραντεβού αιμοδοσίας.
notify_doct(): Μέθοδος που καλείται με την ολοκλήρωση της κράτησης για αιμοδοσία και στέλνει την απαραίτητη ειδοποίηση στους γιατρούς που αντιστοιχούν στη μονάδα.

9. Wallet_Form: (use case 8 - πορτοφόλι υγείας)
	float medicines=[], float vaccines=[], float doct_ap[] : attributes τύπου λίστα όπου δέχονται τα ποσά που δόθηκαν για κάθε μια από τις παραπάνω κατηγορίες.

calculate(): Μέθοδος που υπολογίζει τα μηνιαία έξοξοδα που πραγματοποιήθηκαν για λόγους υγείας, με βάσει τα δεδομένα που παρείχε ο πολίτης στη φόρμα.
store(): Μέθοδος που αποθηκεύει τα δεδομένα που έβαλε ο πολίτης στη φόρμα, στο ιστορικό του πορτοφολιού του.
set(): μέθοδος που μηδενίζει τον μετρητή ημερών ώστε να ξεκινήσει εκ νέου τη καταμέτρηση.
show_expenses(): Μέθοδος που καλείται όταν θέλουμε να εμφανίσουμε τα μηναιά έξοδα του τρέχοντος καθώς και των προηγούμενων μηνών.

10. Digital_Prescription_From: (use case 6 - ψηφιακή συνταγογράφηση)
	string amka, string onoma, string eponimo, string date, string med_name, int doseis, int syhnotita_per_day, string doct_name

match_amka_with_patient(): Μέθοδος που καλείται όταν γίνεται αναζήτηση ενός συγκεκριμένου ασθενή προκειμένου να γραφθεί η ψηφιακή του συνταγογράφηση. 
save_form(): Μέθοδος που καλείται όταν ολοκληρώνεται η καταγραφή της ψηφιακής συνταγογράφησης και θέλουμε να την αποθηκεύσουμε στο προφίλ του πολίτη ώστε να μπορέσει να την εκμεταλλευτεί. 
